services:
  app:
    build: .
    ports:
      - '3000:3000'
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=geoservice
      # OpenTelemetry yapılandırması
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318/v1/traces
      - OTEL_SERVICE_NAME=geo-service
      - OTEL_RESOURCE_ATTRIBUTES=service.name=geo-service,deployment.environment=development
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./:/app
      - /app/node_modules

  postgres:
    image: postgis/postgis:15-3.3
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geoservice
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Jaeger servisi
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '16686:16686' # Web UI
      - '9411:9411' # Zipkin endpoint
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:16686']
      interval: 5s
      timeout: 5s
      retries: 10

  # Prometheus servisi
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - app
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:9090/-/healthy']
      interval: 5s
      timeout: 5s
      retries: 10

  # Grafana servisi
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  pgadmin_data:
  prometheus_data:
  grafana_data:
